@model Sale.FrontEnd.ViewModels.CreateInvoiceViewModel


@{
    ViewData["Title"] = "Edit";
}
@TempData["cart"]
<h2>ایجاد صورت حساب جدید</h2>


<hr />
<div class="container">
    <div class="row">
        @if ((string)TempData["State"] == "Validation Error")
        {
            <div class="alert alert-danger alert-dismissible">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                <strong>فرمت های زیر مشکل دارند:</strong>
                @foreach (var error in (List<string>)TempData["errors"])
                {
                    <div>@error</div>
                }
            </div>
        }
        else if ((string)TempData["State"] == "Fail")
        {
            <div class="alert alert-danger alert-dismissible">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                <strong>عملیات با شکست موجه شد!</strong>
            </div>
        }

        @using (Html.BeginForm("Edit", "Invoices", FormMethod.Post))
        {


            <div class="row">


                <div class="form-group col-md-4">
                    <label asp-for="invoice.Customer.LastName" class="control-label "></label>
                    <input asp-for="invoice.Customer.LastName" class="form-control " readonly />
                    <span asp-validation-for="invoice.Customer.LastName" class="text-danger"></span>
                </div>
                <div class="form-group col-md-4">
                    <label asp-for="invoice.Customer.FirstName" class="control-label "></label>
                    <input asp-for="invoice.Customer.FirstName " class="form-control  " readonly />
                    <span asp-validation-for="invoice.Customer.FirstName" class="text-danger"></span>
                </div>


                <div class="form-group col-md-4">
                    <label asp-for="invoice.ModifiedDate" class="control-label"></label>
                    <input asp-for="invoice.ModifiedDate" class="form-control" readonly />
                    <span asp-validation-for="invoice.ModifiedDate" class="text-danger"></span>
                </div>

            </div>
            <div class="row  ">

                <div class="form-group col-md-2 align-self-md-end">
                    <label asp-for="invoice.TotalPrice" class="control-label" style="color:snow"></label>
                    @Html.DropDownList("item.ProductId",

                new SelectList(Model.productsList, "Key",
                "Value"),


                new { @class = "form-control productId productSelectionBox align-self-md-end" }

                )

                </div>
                <div class="form-group col-md-2">
                    <label asp-for="item.Quantity" class="control-label "></label>
                    <input asp-for="item.Quantity" class="form-control itemQuantity " />
                    <span asp-validation-for="item.Quantity" class="text-danger"></span>
                </div>

                <div class="form-group col-md-2 align-self-md-end">

                    <label asp-for="invoice.TotalPrice" class="control-label" style="color:snow"></label>
                    <button type="button" class="btn btn-info addItem " id="addItem">اضافه کردن محصول</button>
                </div>
                <div class="form-group col-md-2">
                    <label asp-for="invoice.TotalPrice" class="control-label"></label>
                    <input asp-for="invoice.TotalPrice" class="form-control col-2" readonly />
                    <span asp-validation-for="invoice.TotalPrice" class="text-danger"></span>
                </div>
            </div>
            @*@foreach (var item in Model.items)
            {
                <td>
                    @Html.DisplayFor(modelItem => item.Product.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>

                <td>
                    <button type="button" class="btn btn-warning">Remove item</button>
                </td>

            }*@

            @*<div class="form-group">
                <label asp-for="TotalPrice" class="control-label"></label>
                <input asp-for="TotalPrice" class="form-control" />
                <span asp-validation-for="TotalPrice" class="text-danger"></span>
            </div>*@


            @*<div id="div_to_load_PartialView">

                @await Html.PartialAsync("_CreateInvoicePartialView")


            </div>*@
            <div id="div_to_load_PartialView1">

                <table class="table itemTable " id="myTable">
                    <thead>
                        <tr>
                            <th> @Html.DisplayNameFor(modelItem => Model.item.Product.Name) </th>
                            <th> @Html.DisplayNameFor(modelItem => Model.item.Product.Brand)</th>

                            <th> @Html.DisplayNameFor(modelItem => Model.item.Quantity) </th>

                            <th> @Html.DisplayNameFor(modelItem => Model.item.Price) تومان </th>

                            <th></th>

                        </tr>
                    </thead>
                    <tbody id="Invoice_Items ">
                        @if (Model.invoice.Items != null)
                        {
                            @foreach (var item in Model.invoice.Items)
                            {


                                <tr class="@item.Product.Id" , name="@item.Product.Id" , item="@item.Id">
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Product.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Product.Brand)
                                    </td>
                                    <td class="Quantity">
                                        @Html.DisplayFor(modelItem => item.Quantity)
                                    </td>
                                    <td class="Price">
                                        @Html.DisplayFor(modelItem => item.Price)
                                    </td>

                                    <td>
                                        <button type="button" class="btn btn-danger  removeItem">حذف ردیف</button>

                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>

            </div>

            <div class="row lastRow" style="width:915px">
                <div class="form-group col-md-2">
                    <input type="submit" value="اعمال تغییر" class="btn btn-outline-blue editButton" style="float:left; width:80px" />
                </div>
                <div>

                    <a asp-action="Index" class="col-md-2" style="float:right">بازگشت به لیست مشتریان</a>
                </div>
            </div>
            <div class="form-group col-md-4">
                <label asp-for="invoice.Id" class="control-label " style="visibility:hidden" hidden></label>
                <input asp-for="invoice.Id " class="form-control  " style="visibility:hidden" hidden />
                <span asp-validation-for="invoice.Id" class="text-danger"></span>
            </div>
        }
    </div>
</div>




@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>

         var customerId =$('.customerId').val();


        @TempData["cart"]
    $('#addItem').on("click", function () {
        var productID = $('.productId').val();
        var itemQuantity = $('.itemQuantity').val();
        var invoiceId = @Model.invoice.Id;
       // var selectedOption= $(".productSelectionBox option:selected").text();
        if ($('#myTable tr').hasClass(productID)) {
            alert("این محصول قبلا انتخاب شده است. برای اعمال تغییرات ابتدا محصول مورد نظر را حذف و دوبار آن را اضافه کنید.");
        }
        else {
           // alert("into additem js");
            //$(this).
            $('.itemQuantity').val(0);

            $.ajax({

                url: '@Url.Action("AddItem", "Invoices")',
                type: "POST",

                data: { productID: productID, itemQuantity: itemQuantity, invoiceId: invoiceId },//this is as per your requirement
                success: successFunc
            });
        }
        function successFunc(data) {
         // alert("success ajax")

            var temp = $("#invoice_TotalPrice").val();
            temp = parseInt(temp);

            jQuery.each(data.invoice.items, function (index, item) {

                var addedAmount =parseInt( item.price) * parseInt(item.quantity);
                $("#invoice_TotalPrice").val(temp + addedAmount);
                //console.log($('#div_to_load_PartialView').find("tr ."+item.productId).length);
                   // console.log(item);

                    $('#myTable').append(

                        '<tr class="table' + ' ' + item.productId+'"' + 'name="' + item.productId +'"'+'item="'+item.id+ '">' +

                        '<td   class="'+"editMe"+' ' + "Name" + '">' + item.product.name + "</td>" +
                        '<td class="' +"editMe"+ ' '+ "Brand"  + '"> ' + item.product.brand + "</td>" +
                        '<td class="' +"editMe"+ ' '+"Quantity" + '">' + item.quantity + "</td>" +
                        '<td class="'+"editMe" +' '+ "Price" + '">' + item.price + "</td>" +
                        "<td>" + ' <button type=' + '"button"' + ' class=' + '"btn btn-danger  removeItem"' + ">حذف ردیف</button>"
                        + "</td>" +
                         '<td class="' + "hidden" + '">' + item.productId + "</td>" +
                        "</tr>"
                    );


            });
        }

    });
    $("#myTable").on("click", "button", function () {
        var productId = $(this).closest('tr ').attr("name");
        var itemId = $(this).closest('tr ').attr("item");

        var button = $(this);

        //alert(itemId);
         $.ajax({

            url: '@Url.Action("removeItem", "Invoices")',
            type: "POST",

            data: {itemId:itemId },//this is as per your requirement
            success: successFunc
        });
        function successFunc(result) {
            console.log(result == true);
            if (result == true) {

                // var productBrand = $(this).closest('tr ').find(".Brand").text();
                // alert(productBrand);
                 var productQuantity =button.closest('tr ').find(".Quantity").text();


               // alert(productQuantity);
                var productPrice = button.closest('tr').find('.Price').text();
              //  alert(productPrice);

                var temp = $("#invoice_TotalPrice").val();
               // alert(temp);
              //  alert(temp);
                temp = parseInt(temp);
                var removingAmount = parseInt(productPrice) * parseInt(productQuantity);
               // alert(removingAmount);
                $("#invoice_TotalPrice").val(temp - removingAmount);
               // alert("clicked");
                button.closest('tr').remove();
            }
        }





         @*var invoiceId =@Model.invoice.Id;
         var invoice =@Model.invoice;
        $('.editButton').on("click", function (e) {
            e.preventDefault();
            //alert("into create js")

            $.ajax({

                url: '/Invoices/Update',
                type: "POST",

                data: { invoiceId: invoiceId ,invoice:invocie},
                success: function (data) {

                    window.location.href = data;
                }


            });
        });*@









   })



    </script>


}




